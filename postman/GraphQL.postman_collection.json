{
	"info": {
		"_postman_id": "08993826-26cc-4af8-be0d-6fc3337567bc",
		"name": "GraphQL",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "1977863"
	},
	"item": [
		{
			"name": "Book",
			"item": [
				{
					"name": "Get Book",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query  {\n  bookById(id: 2) {\n    id\n    name\n    pageCount\n    author {\n      id\n      firstName\n      lastName\n      \n    }\n  }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "localhost:8080/graphql",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetAllBooks",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-API-KEY",
								"value": "Baeldung",
								"type": "text"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\n  getAllBooks {\n    id\n    name\n    pageCount\n    author {\n      id\n      firstName\n      lastName\n      \n    }\n  }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "localhost:8080/graphql",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Book",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n   addBook(bookRequest: {authorId: 100, name: \"Pedro PÃ¡ramo\", pageCount: 215}) {\n    author {\n      firstName\n      id\n      lastName\n    }\n    id\n    name\n    pageCount\n  }\n}\n",
								"variables": ""
							}
						},
						"url": {
							"raw": "localhost:8080/graphql",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Book",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n  updateBook(\n    bookRequest: {authorId: 99, name: \"The Little Prince\", pageCount: 10}\n    id: 102\n  ) {\n    author {\n      firstName\n      id\n      lastName\n    }\n    id\n    name\n    pageCount\n  }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "localhost:8080/graphql",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Book",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n  deleteBook(id: 102) {\n    id\n    name\n    pageCount\n    author {\n      firstName\n      id\n      lastName\n    }\n  }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "localhost:8080/graphql",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Author",
			"item": [
				{
					"name": "Get Author",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query  {\n  authorById(id: 99) {\n    id,\n    firstName,\n    lastName,\n    books {\n        id,\n        name,\n        pageCount\n    }\n  }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "localhost:8080/graphql",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetAllAuthors",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\n  getAllAuthors {\n        id\n        firstName\n        lastName\n        books {\n            id\n            name\n            pageCount\n        }\n    }\n  \n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "localhost:8080/graphql",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Author",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n  addAuthor(authorRequest: {firstName: \"Juan\", lastName: \"Rulfo\"}) {\n    id\n    firstName\n    lastName\n  }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "localhost:8080/graphql",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Author",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation MyMutation {\n  updateAuthor(\n    authorRequest: {firstName: \"Antoine\", lastName: \"De Saint Exupery\"}\n    id: 99\n  ) {\n    id\n    firstName\n    lastName\n  }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "localhost:8080/graphql",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Author",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n  deleteAuthor(id: 99) {\n    firstName\n    id\n    lastName\n  }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "localhost:8080/graphql",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Security",
			"item": [
				{
					"name": "Signup",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\r\n  signup(\r\n    request: {\r\n        email: \"luis.celis@live.com.mx\", \r\n        firstName: \"Luis\", \r\n        lastName: \"Celis\", \r\n        password: \"q1w2e3r4\"}\r\n  ) {\r\n    token\r\n  }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "localhost:8080/graphql",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Signin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var r = pm.response.json();\r",
									"var token = r.data.signin.token;\r",
									"console.log(token) \r",
									"pm.environment.set(\"token\", token)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\r\n  signin(request: {email: \"luis.celis@live.com.mx\", password: \"q1w2e3r4\"}) {\r\n    token\r\n  }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "localhost:8080/graphql",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}